@model MvcWeb.Models.SubmittedArticle
@using Piranha.Models
@{
    ViewBag.Title = "Review Article";
    var userRoles = ViewBag.UserRoles as IList<string> ?? new List<string>();
    var availableTransitions = ViewBag.AvailableTransitions as IList<WorkflowTransition> ?? new List<WorkflowTransition>();
    var currentState = ViewBag.CurrentState as string ?? "draft";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-12">
            <a href="@Url.Action("Workflow")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Back to Workflow
            </a>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Article Preview</h4>
                    <span class="badge @((!string.IsNullOrEmpty(Model.WorkflowState) ? Model.WorkflowState : currentState) switch {
                                            "draft" => "bg-secondary",
                                            "in_review" => "bg-info",
                                            "rejected" => "bg-danger",
                                            "approved" => "bg-warning",
                                            "published" => "bg-success",
                                            "archived" => "bg-dark",
                                            _ => "bg-secondary"
                                        })">
                        @((!string.IsNullOrEmpty(Model.WorkflowState) ? Model.WorkflowState : currentState)?.Replace("_", " ").ToUpperInvariant() ?? "DRAFT")
                    </span>
                </div>
                <div class="card-body">
                    <h1>@Model.Submission.Title</h1>
                    
                    <div class="mb-3">
                        <small class="text-muted">
                            By @Model.Submission.Author | Submitted on @Model.Created.ToString("MMMM dd, yyyy")
                        </small>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.Submission.Category))
                    {
                        <div class="mb-3">
                            <span class="badge bg-primary">@Model.Submission.Category</span>
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(Model.Submission.Excerpt))
                    {
                        <div class="card bg-light mb-3">
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2 text-muted">Excerpt</h6>
                                <p class="card-text">@Model.Submission.Excerpt</p>
                            </div>
                        </div>
                    }
                    
                    <div class="mb-3">
                        @Html.Raw(Model.Submission.Content)
                    </div>
                    
                    @if (!string.IsNullOrEmpty(Model.Submission.Tags))
                    {
                        <div class="mb-3">
                            <h6>Tags</h6>
                            @foreach (var tag in Model.Submission.Tags.Split(',').Select(t => t.Trim()))
                            {
                                <span class="badge bg-secondary me-1">@tag</span>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Article Details</h5>
                </div>
                <div class="card-body">
                    <dl>
                        <dt>Status</dt>
                        <dd>@((!string.IsNullOrEmpty(Model.WorkflowState) ? Model.WorkflowState : currentState)?.Replace("_", " ").ToUpperInvariant() ?? "DRAFT")</dd>
                        
                        <dt>Author</dt>
                        <dd>@Model.Submission.Author</dd>
                        
                        <dt>Author Email</dt>
                        <dd>@Model.Submission.Email</dd>
                        
                        <dt>Submitted</dt>
                        <dd>@Model.Created.ToString("yyyy-MM-dd HH:mm")</dd>
                        
                        <dt>Last Modified</dt>
                        <dd>@Model.LastModified.ToString("yyyy-MM-dd HH:mm")</dd>
                        
                        @if (Model.Published.HasValue)
                        {
                            <dt>Published</dt>
                            <dd>@Model.Published.Value.ToString("yyyy-MM-dd HH:mm")</dd>
                        }
                        
                        @if (Model.PostId.HasValue)
                        {
                            <dt>Post ID</dt>
                            <dd>@Model.PostId</dd>
                        }
                    </dl>
                </div>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.EditorialFeedback))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Editorial Feedback</h5>
                    </div>
                    <div class="card-body">
                        <p>@Model.EditorialFeedback</p>
                    </div>
                </div>
            }
            
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Actions</h5>
                </div>
                <div class="card-body">
                    @if (availableTransitions != null && availableTransitions.Any())
                    {
                        <form method="post">
                            <div class="mb-3">
                                <label for="feedback" class="form-label">Feedback for Author</label>
                                <textarea name="feedback" id="feedback" class="form-control" rows="3" placeholder="Optional feedback for the author..."></textarea>
                            </div>
                            
                            <div class="d-grid gap-2">
                                @foreach (var transition in availableTransitions)
                                {
                                    var buttonClass = transition.ToStateKey switch
                                    {
                                        "published" => "btn btn-primary",
                                        "approved" => "btn btn-success",
                                        "rejected" => "btn btn-danger",
                                        "draft" => "btn btn-secondary",
                                        "in_review" => "btn btn-info",
                                        "archived" => "btn btn-dark",
                                        _ => "btn btn-outline-primary"
                                    };
                                    
                                    var icon = transition.ToStateKey switch
                                    {
                                        "published" => "fas fa-globe",
                                        "approved" => "fas fa-check",
                                        "rejected" => "fas fa-times",
                                        "draft" => "fas fa-undo",
                                        "in_review" => "fas fa-eye",
                                        "archived" => "fas fa-archive",
                                        _ => "fas fa-arrow-right"
                                    };
                                    
                                    <button type="submit" name="targetState" value="@transition.ToStateKey" class="@buttonClass">
                                        <i class="@icon"></i> @transition.Name
                                    </button>
                                }
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> No workflow transitions are available for your current role.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>